mixin input(model)
	input(ng-model=model, type='tel', required, ng-pattern='/^[0-9]+$/')&attributes(attributes)

.controller(ng-controller='BallotController as ctrl', layout='column', flex)
	.progress-linear.top.fixed(ng-if="ctrl.loading")
	.view-switch(ng-switch='subview', layout='column', flex)
		.subview(ng-switch-default, flex, validate-response='ctrl.fieldErrors').content
			.padding
				section.ballot
					h1 Wypełnij wyniki kandydatów
					.table
						.row(ng-repeat='option in ctrl.ballot.options', validation-message)
							.column.label
								h2.name {{option.split(' ')[0]}}
								p.small {{option.split(' ').slice(1).join(' ')}}
							.column.input
								+input('ctrl.result.votesCountPerOption[$index]')
				section.ballot
					h1 Wypełnij informacje o głosowaniu
					.table
						.row(validation-message)
							.column.label 1. Liczba wyborców uprawnionych
							.column.input
								+input('ctrl.result.votersEntitledCount')(response-validator="'ProtocolsResource.create.arg0.ballotResult.votersEntitledCount'")
							//p {{vm.text}}
						.row(validation-message)
							.column.label 4. Liczba wyborców, którym wydano karty
							.column.input
								+input('ctrl.result.ballotsGivenCount')(response-validator="'ProtocolsResource.create.arg0.ballotResult.ballotsGivenCount'")
							//p {{vm.text}}
						.row(validation-message)
							.column.label 11. Liczba kart ważnych
							.column.input
								+input('ctrl.result.votesCastCount')(response-validator="'ProtocolsResource.create.arg0.ballotResult.votesCastCount'")
							//p {{vm.text}}
						.row(validation-message)
							.column.label 13. Liczba głosów ważnych
							.column.input
								+input('ctrl.result.votesValidCount')(response-validator="'ProtocolsResource.create.arg0.ballotResult.votesValidCount'")
							//p {{vm.text}}
				.errors(validation-message)
					h4.error(response-validator="'ProtocolsResource.create.arg0'") {{vm.text}}

			.divider
			.buttons
				a.button(ng-href='#/wards/{{ctrl.communityCode}}/{{ctrl.wardNo}}/ballots/{{ctrl.ballot.no}}/photos', promised-fn='ctrl.sendResult()')
					span.text dalej

		.subview(ng-switch-when='photos', layout='column', flex)
			.content.padding(flex)
				section.photos
					h1 Prześlij zdjęcia protokołu
					.buttons(ng-if="platformId ==='browser'")
						input(type="file", ng-model="file", ng-change="ctrl.fileSelected(file)", base64-input)
					.buttons(ng-if="platformId !=='browser'")
						button.button(ng-click='ctrl.takePhoto(true)')
							i.icon-photo-library
							span.text wybierz zdjęcie
						button.button(ng-click='ctrl.takePhoto()')
							i.icon-photo-camera
							span.text zrób zdjęcie
				section.photos
					.grid-list
						.grid-tile(ng-repeat='image in ctrl.images').image
							img(ng-src='{{image.src}}')
							.grid-tile-footer(ng-if='!image.res.$resolved') przesyłam...
			.divider
			.buttons
				a.button(ang-if='ctrl.images.length', ng-href='#/wards/{{ctrl.communityCode}}/{{ctrl.wardNo}}/ballots/{{ctrl.ballot.no}}/share', promised-fn='ctrl.sendResult()')
					span.text zakończ

		.subview(ng-switch-when='share')
			.content.padding
				section.share
					h1 Podziel się
					.buttons
						button.button.facebook(ng-click="ctrl.shareFb()")
							span.text facebook
						button.button.twitter(ng-click="ctrl.shareTw()")
							span.text twitter

			.buttons
				a.button(ng-if='ctrl.data.selectedWards.length > 1', ng-href='#/wards')
					span.text inne obwody w pobliżu
				a.button(ng-href='#/wardsmap')
					span.text powrot do mapy






